From: Gregor Riepl <onitake@gmail.com>
Date: Thu, 14 Dec 2023 20:16:15 +0800
Subject: Use explicit initializers for two wxWidgets function calls

Origin: Debian
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1056897
Forwarded: no
Reviewed-by: Aaron Rainbolt <arraybolt3@ubuntu.com>
Last-Update: 2023-11-29

wxWidgets added support for initializer lists to some of their functions, in
a way that clashes with some overloads in the PrusaSlicer source code. These
issues can be worked around with an explicit instantiation of the
std::vector, which is what this patch does.
Last-Update: 2023-11-29
---
 src/slic3r/GUI/PhysicalPrinterDialog.cpp | 2 +-
 src/slic3r/GUI/Plater.cpp                | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/slic3r/GUI/PhysicalPrinterDialog.cpp b/src/slic3r/GUI/PhysicalPrinterDialog.cpp
index 2364c56..bc2c918 100644
--- a/src/slic3r/GUI/PhysicalPrinterDialog.cpp
+++ b/src/slic3r/GUI/PhysicalPrinterDialog.cpp
@@ -467,7 +467,7 @@ void PhysicalPrinterDialog::build_printhost_settings(ConfigOptionsGroup* m_optgr
     // Always fill in the "printhost_port" combo box from the config and select it.
     {
         Choice* choice = dynamic_cast<Choice*>(m_optgroup->get_field("printhost_port"));
-        choice->set_values({ m_config->opt_string("printhost_port") });
+        choice->set_values(std::vector<std::string>({ m_config->opt_string("printhost_port") }));
         choice->set_selection();
     }
 
diff --git a/src/slic3r/GUI/Plater.cpp b/src/slic3r/GUI/Plater.cpp
index a8d5ba2..0d5e49a 100644
--- a/src/slic3r/GUI/Plater.cpp
+++ b/src/slic3r/GUI/Plater.cpp
@@ -5428,7 +5428,7 @@ void Plater::load_project(const wxString& filename)
 
     p->reset();
 
-    if (! load_files({ into_path(filename) }).empty()) {
+    if (! load_files(std::vector<boost::filesystem::path>({ into_path(filename) })).empty()) {
         // At least one file was loaded.
         p->set_project_filename(filename);
         // Save the names of active presets and project specific config into ProjectDirtyStateManager.
